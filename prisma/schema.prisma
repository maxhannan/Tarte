// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("MIGRATE_DATABASE_URL")
}

model User {
  id        String   @id @default(cuid()) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String   @unique 
  email     String   @unique
  password  String
  chef      Boolean  @default(false)
  firstName String
  lastName  String 
  recipes   Recipe[] 
  menus     Menu[]
  dishes    Dish[]
}

model Recipe {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  category    String
  allergens   String[]
  dishes      Dish[]
  yieldAmt    String 
  yieldUnit   String   
  ingredients Ingredient[]
  steps       String[]
  author      User?     @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId    String?  
  linkedIngredients Ingredient[] @relation("Linked Recipes")
}

model Ingredient {
  id          String   @id @default(cuid())
  recipe      Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId    String
  ingredient  String
  qty         String
  unit        String
  linkRecipe  Recipe?  @relation(fields: [linkId], references: [id], "Linked Recipes", onDelete: SetNull) 
  linkId      String?  
}

model Menu {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  sections    MenuSection[]
  dishes      Dish[]
  author      User?     @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId    String?  
}

model MenuSection {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  menu        Menu    @relation(fields: [menuId], references: [id], onDelete: Cascade) 
  menuId      String
  dishes      Dish[]
}

model Dish {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  recipes     Recipe[]
  items       String[]
  section     MenuSection[] 
  Menus       Menu[]
  Notes       String[]
  author      User?     @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId    String?  
}

